---
- name: Install Passbolt
  hosts: localhost
  connection: local
  gather_facts: true

  tasks:
    - name: Installations
      block:
        - name: Update APT cache
          apt:
            update_cache: true
        - name: Basic Packages
          apt:
            name:
              - software-properties-common
              - gnupg
              - curl
              - python3-pymysql
            state: present
        - name: Add PHP Repo
          apt_repository:
            repo: ppa:ondrej/php
            state: present
        - name: Download Tailscale GPG key (modern method)
          get_url:
            url: "https://pkgs.tailscale.com/stable/ubuntu/{{ ansible_lsb.codename }}.noarmor.gpg"
            dest: /usr/share/keyrings/tailscale-archive-keyring.gpg
            mode: "0644"
        - name: Download Tailscale apt source list
          get_url:
            url: "https://pkgs.tailscale.com/stable/ubuntu/{{ ansible_lsb.codename }}.tailscale-keyring.list"
            dest: /etc/apt/sources.list.d/tailscale.list
            mode: "0644"
        - name: Update apt cache
          apt:
            update_cache: true
      become: true

    - name: Install nginx, MySQL, PHP 8.2, Tailscale
      apt:
        name:
          - nginx
          - mysql-server
          - php8.2
          - php8.2-fpm
          - php8.2-cli
          - composer
          - tailscale
          # Extensiones PHP adicionales
          - php8.2-gnupg
          - php8.2-intl
          - php8.2-mbstring
          - php8.2-xml
          - php8.2-gd
          - php8.2-imagick
          - php8.2-mysql
          - php8.2-curl
          - php8.2-ldap
        state: present
        update_cache: true
      become: true

    - name: Configure Mysql
      block:
        - name: Get current MySQL users (by socket)
          community.mysql.mysql_info:
            login_unix_socket: /var/run/mysqld/mysqld.sock
            filter: users
          register: mysql_users
          failed_when: false
          ignore_errors: true
        - name: Set MySQL root password using unix socket if needed
          community.mysql.mysql_user:
            name: root
            host: localhost
            password: "{{ mysql_root_password }}"
            plugin: mysql_native_password
            login_unix_socket: /var/run/mysqld/mysqld.sock
            state: present
          become: true
          when: >
            mysql_users.users is defined and
            (mysql_users.users | selectattr('User', 'equalto', 'root') | selectattr('Host', 'equalto', 'localhost') | map(attribute='plugin') | first | default('')) != "mysql_native_password"
        - name: Remove root user on all hosts except localhost
          community.mysql.mysql_user:
            name: root
            host: "{{ item }}"
            state: absent
            login_user: root
            login_password: "{{ mysql_root_password }}"
          loop:
            - 127.0.0.1
            - ::1
            - "%"
          become: true
        - name: Remove anonymous MySQL users
          community.mysql.mysql_user:
            name: ""
            host_all: true
            state: absent
            login_user: root
            login_password: "{{ mysql_root_password }}"
          become: true
        - name: Remove MySQL test database
          community.mysql.mysql_db:
            name: test
            state: absent
            login_user: root
            login_password: "{{ mysql_root_password }}"
          become: true
